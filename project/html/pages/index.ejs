<html lang="en">
  <head>
    <meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<link type="text/css" rel="stylesheet" href="/css/three.css">
		<style>
			body {
				background-image: linear-gradient(#68BBE3 50%, #f5B1D4 100%);
			}
			.testimonial {
    		behavior: url(PIE.htc); /* remove if you don't care about IE8 */
				width: 200px;
				height: 200px;
				overflow: hidden;
			}
			.testimonialContainer {
        border-radius: 50%;
				box-shadow: 0px 0px 100px rgba(255,255,153,0.95);
				border: 1px solid rgba(255,255,153,0.25);
			}
			.testimonialImage {
				background-position: center;
				background-size: cover;
				background-repeat: no-repeat;
				-webkit-filter: blur(10px);
			  -moz-filter: blur(10px);
			  -o-filter: blur(10px);
			  -ms-filter: blur(10px);
			  filter: blur(10px);
			}
			.testimonialImage:hover {
				-webkit-filter: blur(0px);
				-moz-filter: blur(0px);
				-o-filter: blur(0px);
				-ms-filter: blur(0px);
				filter: blur(0px);
			}
			#cursorTextContainer {
				position: absolute;
				visibility: hidden;
        font-size: 14px;
				z-index: 1;
				color: #ffffff;
				text-shadow: 0px 0px 8px #000000;
			}
      #fadeScreen {
				position: absolute;
				width: 100%;
				height: 100%;
				background-color: rgba(0, 0, 0, 0);
				z-index: 1;
				visibility: hidden;
			}
      #close_btn {
        position: absolute;
        top: 0;
        left: 0;
        padding: 1% 0% 0% 1%;
        width: 2%;
				visibility: hidden;
      }
		</style>
    <% include ../helpers/head %>
  </head>
  <body>
    <div class="page-header">
      <h1>cv19 memorial</h1>
    </div>
    <div id="fadeScreen">
      <image src="images/icons/close_btn.png" id="close_btn">
    </div>
    <p id="cursorTextContainer"></p>
    <div id="container">
		</div>
    <div class="page-footer">
      <% include ../helpers/navbar %>
    </div>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script type="module">

      import * as THREE from '/js/three/build/three.module.js';

      import { TrackballControls } from '/js/three/jsm/controls/TrackballControls.js';
      import { TWEEN } from '/js/three/jsm/libs/tween.module.min.js';
      import { CSS3DRenderer, CSS3DSprite } from '/js/three/jsm/renderers/CSS3DRenderer.js';

      var camera, scene, renderer;
      var controls;

      var particlesTotal = 50;
      var objects = [];

      var toolTipTextContainer = document.getElementById("cursorTextContainer");
      var sceneContainer = document.getElementById("container");
      var fadeToDiv = document.getElementById("fadeScreen");
      var closeBtn = document.getElementById("close_btn");

      init();
      animate();

      window.onload = function() {
        sceneContainer.addEventListener("mouseover", function (event) {
          onTestimonialMouseIn(event);
        });
        sceneContainer.addEventListener("mouseout", function (event) {
          onTestimonialMouseOut(event);
        });
        sceneContainer.addEventListener("click", function (event) {
          onTestimonialClick(event);
        });
        closeBtn.addEventListener("click", function (event) {
          fadeModal("out");
        });
      }

      function init() {
        camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 5000 );
        camera.position.set( 600, 400, 1500 );
        camera.lookAt( 0, 0, 0 );

        scene = new THREE.Scene();

        for ( var i = 0; i < particlesTotal; i ++ ) {
          var testimonial = document.createElement('div');
          testimonial.className = 'testimonial testimonialContainer';
          var image = document.createElement('div');
          image.className = 'testimonial testimonialImage';
          image.style.backgroundImage = 'url(/images/portraits/image_0112_mirror.jpg)';

          var text = document.createElement('span');
          text.innerHTML = "Jane Doe â€¢ 12/04/58 - 12/05/20"
          text.className = 'tooltiptext';

          testimonial.appendChild(image);
          testimonial.appendChild(text);

          var object = new CSS3DSprite(testimonial);
          object.position.x = Math.random() * 4000 - 2000,
          object.position.y = Math.random() * 4000 - 2000,
          object.position.z = Math.random() * 4000 - 2000;
          scene.add( object );

          objects.push( object );
        }

        renderer = new CSS3DRenderer();
        renderer.setSize( window.innerWidth, window.innerHeight );
        sceneContainer.appendChild( renderer.domElement );

        controls = new TrackballControls( camera, renderer.domElement );

        window.addEventListener( 'resize', onWindowResize, false );
        console.log(camera.position);
      }

      function onWindowResize() {

        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();

        renderer.setSize( window.innerWidth, window.innerHeight );

      }

      function animate() {
        requestAnimationFrame( animate );

        controls.update();
        TWEEN.update();
        renderer.render( scene, camera );

      }

      function onTestimonialMouseIn(evt) {
        if(evt.target &&  evt.target.className == "testimonial testimonialImage"){
          var testimonialContainer = evt.target.parentNode;
          var testimonialText = testimonialContainer.childNodes[1];

          toolTipTextContainer.innerHTML = testimonialText.innerHTML;
          toolTipTextContainer.style.top = evt.clientY + "px";
          toolTipTextContainer.style.left = evt.clientX + "px";
          toolTipTextContainer.style.visibility = "visible";
        }
      }

      function onTestimonialMouseOut(evt) {
        if(evt.target &&  evt.target.className == "testimonial testimonialImage"){
          toolTipTextContainer.innerHTML = "";
        }
      }

      function onTestimonialClick(evt) {
        if(evt.target &&  evt.target.className == "testimonial testimonialImage"){
          var testimonialContainer = evt.target.parentNode;
          var testimonialIndex = Array.from(testimonialContainer.parentElement.children).indexOf(testimonialContainer);

					beginTestimonialTransition(objects[testimonialIndex]);
        }
      }

      function beginTestimonialTransition(testimonial) {
				var position = controls.target;
				var target = testimonial.position;
				var tween = new TWEEN.Tween(position).to(target, 500);

				tween.onUpdate(function(){
				  controls.target = position;
				});

				tween.onComplete(function(){
				  zoomTestimonial("in", target);
					fadeModal("in");
				});

				tween.start();
			}

			function zoomTestimonial(direction, target) {
				var cam = camera.position;
				var target =  direction == "in" ? target : { x: target.x, y: target.y, z: 1500 } ;
				var zTween = new TWEEN.Tween(cam).to(target, 1000);

				zTween.onUpdate(function(){
					camera.position.z = cam.z;
				});

				zTween.start();
			}

			function fadeModal(direction) {
				var currentOpacity = { percentage : direction == "in" ? 0 : 1 };
				var transitionOpacity = { percentage : direction == "in" ? 1 : 0 };
				var fadeTween = new TWEEN.Tween(currentOpacity).to(transitionOpacity, 1100);

				fadeTween.onUpdate(function(){
					fadeToDiv.style.backgroundColor = 'rgba(0, 0, 0, ' + currentOpacity.percentage + ')';
				});

				if (direction == "in") {
					fadeToDiv.style.visibility = 'visible';
					fadeTween.start();
					fadeTween.onComplete(function() {
						closeBtn.style.visibility = 'visible';
					});

				} else {
					closeBtn.style.visibility = 'hidden';
					zoomTestimonial("out", camera);
					fadeTween.start();
					fadeTween.onComplete(function() {
						fadeToDiv.style.visibility = 'hidden';
					});
				}
			}
    </script>
  </body>
</html>
